name: Python NLP Server CI/CD

on:
  push:
    branches: [ python-dev ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install Hatch
      run: pip install hatch
    
    - name: Create virtual environment
      run: hatch env create
      working-directory: nlp-server

    - name: Install dependencies
      run: hatch run pip install ".[dev]"
      working-directory: nlp-server

    - name: Run tests with pytest
      run: hatch run pytest --cov=app --cov-report=xml
      working-directory: nlp-server
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: nlp-server/coverage.xml
        fail_ci_if_error: true

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Hatch
      run: pip install hatch
    
    - name: Create virtual environment
      run: hatch env create
      working-directory: nlp-server

    - name: Install dependencies
      run: hatch run pip install ".[dev]"
      working-directory: nlp-server

    - name: Run black
      run: hatch run black . --check
      working-directory: nlp-server

    - name: Run isort
      run: hatch run isort . --check-only
      working-directory: nlp-server

    - name: Run flake8
      run: hatch run flake8 .
      working-directory: nlp-server

  deploy:
    needs: [test, lint]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/python-dev'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Hatch
      run: pip install hatch
    
    - name: Create virtual environment
      run: hatch env create
      working-directory: nlp-server

    - name: Install dependencies
      run: hatch run pip install ".[dev]"
      working-directory: nlp-server

    - name: Deploy to production
      env:
        FLASK_ENV: production
        NAVER_CLIENT_ID: ${{ secrets.NAVER_CLIENT_ID }}
        NAVER_CLIENT_SECRET: ${{ secrets.NAVER_CLIENT_SECRET }}
      run: |
        echo "Deployment steps will be added here" 
      working-directory: nlp-server